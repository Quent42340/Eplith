Eplith=/home/quentin/Bureau/Projets/FlexBison/Eplith CD=. filter=".gitignore *.c *.h *.l *.y *.diff *.vim AUTHORS ChangeLog COPYING Makefile Notes TODO *.textile *.ep *.cpp" {
 .gitignore
 AUTHORS
 ChangeLog
 COPYING
 Makefile
 Notes
 TODO
 README.textile
 EPlib=EPlib {
  Makefile
  include=include {
   EPlib.h
   EPlib=EPlib {
    expression.h
    function.h
    header.h
    program.h
    value.h
    variable.h
   }
  }
  source=source {
   lexer.l
   parser.y
   expression.cpp
   function.cpp
   program.cpp
   value.cpp
   variable.cpp
  }
 }
 EPblib=EPblib {
  Makefile
  include=include {
   EPblib.h
   EPblib=EPblib {
    EPb_array.h
    EPb_base.h
    EPb_io.h
    EPb_math.h
    EPb_string.h
    EPb_system.h
    EPb_tools.h
   }
  }
  source=source {
   EPb_array.cpp
   EPb_base.cpp
   EPb_io.cpp
   EPb_math.cpp
   EPb_string.cpp
   EPb_system.cpp
   EPb_tools.cpp
  }
 }
 sample=sample {
  Makefile
  scripts=scripts {
   sample.ep
  }
  source=source {
   main.cpp
  }
 }
 source=source {
  main.cpp
 }
 tests=tests {
  array_test.ep
  assign_test.ep
  bc_test.ep
  bit_test.ep
  block_test.ep
  class_test.ep
  comp_test.ep
  cond_test.ep
  const_test.ep
  cr_test.ep
  delete_test.ep
  factorial.ep
  farray_test.ep
  file_test.ep
  float_issue.ep
  float_test.ep
  functions_test.ep
  include_file.ep
  include_test.ep
  io_test.ep
  math_test.ep
  string_test.ep
  system_test.ep
  temp_test.ep
  test.ep
  type_test.ep
  DesignPatterns=DesignPatterns {
   strategy.ep
  }
  Programs=Programs {
   MoreOrLess.ep
  }
 }
 tools=tools {
  eplith.vim
 }
 wiki=wiki {
  .gitignore
  Code-samples.textile
  Eplith-Documentation.textile
  Home.textile
  Installation-Instructions.textile
 }
}
